lass Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree
    vector<int> topView(Node *root)
    {
        vector<int> ans;
        queue<pair<Node* ,int>> q;
        map<int, int> h;
        q.push({root,0});
        while(!q.empty())
        {
            pair<Node*,int> p = q.front();
            q.pop();
            if(h.count(p.second)==0)
            {
                h[p.second]=p.first->data;
            }
            if(p.first->left!=NULL)
            {
                q.push({p.first->left,p.second-1});
            }
             if(p.first->right!=NULL)
            {
                q.push({p.first->right,p.second+1});
            }
        }
        for(auto it=h.begin();it!=h.end();it++)
        {
            ans.push_back(it->second);
        }
        return ans;
        
        //Your code here
    }

};
